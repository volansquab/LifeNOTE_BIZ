<!DOCTYPE html>
<html lang="en">
<head>

    @*<meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />*@


    @*<title>@ViewData["Title"] - LifeNOTE</title>*@
    @*<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />*@


    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
    <!-- Font Awesome CSS -->
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'>



    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/LifeNOTE_BIZ.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                @*<a class="navbar-brand" asp-area="" asp-page="/Index">LifeNOTE</a>*@
                
            </div>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">

                <span class="navbar-toggler-icon"></span>

            </button>

            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <partial name="_LoginPartial" />
            </div>
        </nav>
    </header>
    <div class="container-fluid">
    @*<div class="container">*@
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
<style>
            .cp_tab *, .cp_tab *:before, .cp_tab *:after {
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
            }

            .cp_tab {
                margin: 0;
            }

                .cp_tab > input[type='radio'] {
                    margin: 0;
                    padding: 0;
                    border: none;
                    border-radius: 0;
                    outline: none;
                    background: none;
                    -webkit-appearance: none;

                    display: none;
                }

                .cp_tab .cp_tabpanels {
                    position: relative;
                    min-height: 150px; /* エリアの高さ */
                }

                .cp_tab .cp_tabpanel {
                    position: absolute;
                    width: 100%;
                    height: auto;
                    opacity: 0;
                    padding: 0.5em 1em;
                    transform: translateY(-10px);
                    -webkit-transition: opacity 0.5s, -webkit-transform 0.5s;
                    transition: opacity 0.5s, -webkit-transform 0.5s;
                    transition: transform 0.5s, opacity 0.5s;
                    transition: transform 0.5s, opacity 0.5s, -webkit-transform 0.5s;
                }
    @{
        
    }

    @{
        if(IndexModel.Alldoc.Count==0)
        {
            IndexModel.tss4 = IndexModel.GetLocList(IndexModel.containerName_setting);
                    await Task.WhenAll(IndexModel.tss4);

                    //本体ファイルのクリア
                    IndexModel.Alldoc.Clear();
                    IndexModel.srcAlldoc.Clear();
                    IndexModel.titlenamelist.Clear();
                    IndexModel.inacttitlenamelist.Clear();



                    //タイトルの取得

                    var count3 = 0;
                    for (int i = 0; i <= IndexModel.result.Items.Count - 1; i++)
                    {
                        var titlestr1 = (TitleItem)IndexModel.result.Items[i];
                        var titlestr2 = titlestr1.Title;
                        var titlestr3 = titlestr1.Status;

                         var titlename = titlestr2.Replace(".csv", "");

                        if (titlestr3 == "ACTIVE")
                        {
                            IndexModel.titlenamelist.Add(titlename);

                            count3 += 1;
                        }
                        else
                        {
                            IndexModel.inacttitlenamelist.Add(titlename);
                        }
                    }
                    //読み込んだファイルの数を格納
                    IndexModel.datasize = count3;

                    //XMLシリアル化するオブジェクト

                    var count2 = 0;
                    LocClass Loc = new LocClass();
                    Loc.Items = new System.Collections.ArrayList();
                    ConvLoc ConvLoc = new ConvLoc();
                    ConvLoc.Items = new System.Collections.ArrayList();

                    for (int i = 0; i <= IndexModel.LocGen.Items.Count - 1; i++)
                    {
                        var locstr150 = (LocItem)IndexModel.LocGen.Items[i];
                        var id = locstr150.ID;
                        var locstr2 = locstr150.Loc1;
                        var locstr3 = locstr150.Loc2;
                        var locstr4 = locstr150.Status;
                        if (locstr4 == "ACTIVE")
                        {
                            Loc.Items.Add(new LocItem(id, locstr2, locstr3, locstr4));
                            ConvLoc.Items.Add(new ConvLocItem(i, count2));
                            count2 = count2 + 1;
                        }
                    }
                    
                    //★
                    var locstr15 = (ConvLocItem)ConvLoc.Items[IndexModel.selecttab - 1];
                    IndexModel.activetab = locstr15.mainid;


                    IndexModel.tss5 = IndexModel.GetAllDoc(IndexModel.containerName_setting);
                    await Task.WhenAll(IndexModel.tss5);
            
                    
        }
        
                        

                }
                
                @{
                    var css1 = "";
                    for (int i = 1; i <= IndexModel.datasize; i++)
                    {
                        //★差異部分
                        if (i == 1)
                        {
                            if(IndexModel.datasize != 1)
                            {
                                css1 = css1 + ".cp_tab > input:first-child:checked ~ .cp_tabpanels > .cp_tabpanel:first-child,";
                            }
                            else
                            {
                                var number = 3 + 2 * (i - 2);
                                css1 = css1 + ".cp_tab > input:nth-child(" + number + "):checked ~ .cp_tabpanels > .cp_tabpanel:nth-child(" + i + ")";
                            }
                        }
                        else if (i== IndexModel.datasize)
                        {
                            var number = 3 + 2 * (i - 2);
                            css1 = css1 + ".cp_tab > input:nth-child(" + number + "):checked ~ .cp_tabpanels > .cp_tabpanel:nth-child("+ i +")";
                        }
                        else
                        {
                            var number = 3 + 2 * (i - 2);
                            css1 = css1 + ".cp_tab > input:nth-child(" + number + "):checked ~ .cp_tabpanels > .cp_tabpanel:nth-child(" + i + "),";
                        }

                    }
                    @Html.Raw(css1 +
                    "                    {opacity: 1;" +
                    "                    transform: translateY(0px);" +
                    "                }");
                }

                @{
                    var css2 = "";
                    for (int i = 1; i <= IndexModel.datasize; i++)
                    {

                        if (i == 1)
                        {
                            css2 = css2 + ".cp_tab > input:first-child:checked ~ .cp_tabpanels > .cp_tabpanel:first-child {" +
                            "                    background: " + IndexModel.TabColours[i-1] + ";" +
                            "                    background-image: url(tab1.png); /* 背景画像指定 */" +
                            "                    position: relative;" +
                            "                    }";
                        }
                        else
                        {
                            var number = 3 + 2 * (i - 2);
                            css2 = css2 + ".cp_tab > input:nth-child("+ number +"):checked ~ .cp_tabpanels > .cp_tabpanel:nth-child("+ i +") {" +
                            "                    background: " + IndexModel.TabColours[i - 1] + ";" +
                            "                    background-image: url(tab1.png); /* 背景画像指定 */" +
                            "                    position: relative;" +
                            "                    }";
                        }

                    }
                    @Html.Raw(css2 +
                    ".cp_tab > label {" +
                    "                    position: relative;" +
                    "                    display: inline-block;" +
                    "                    cursor: pointer;" +
                    "                        border-radius: 6px 6px 0 0;" +
                    "                        font-weight: bold;" +
                    "                    }");
                }

                @{
                    var css3 = "";
                    for (int i = 1; i <= IndexModel.datasize; i++)
                    {

                        if (i == 1)
                        {
                            css3 = css3 + ".cp_tab > input:first-child + label {" +
                            "                                width: calc(100%/11);" +
                            "                                background: " + IndexModel.TabColours[i - 1] + ";" +
                            "                    background-image: url(tab1.png); /* 背景画像指定 */" +
                            "                                }";
                        }
                        else
                        {
                            var number = 3 + 2 * (i - 2);
                            css3 = css3 + ".cp_tab > input:nth-child("+ number + ") + label {" +
                            "                                width: calc(100%/11);" +
                            "                                background: " + IndexModel.TabColours[i - 1] + ";" +
                            "                    background-image: url(tab1.png); /* 背景画像指定 */" +
                            "                                }";
                        }

                    }
                    @Html.Raw(css3);
                }

                .cp_tab > label:hover {
                                color: #0066cc;
                }

                .cp_tab > input:focus + label {
                                color: #ffffff;
                }

                .cp_tab > input:checked + label {
                                    margin-bottom: -1px;
                                }

                                body {
                                    background-image: url(bg_pattern_1.png); /* 背景画像指定 */
                                }

            .same-width-list {
                width: calc(100%/2);
                height: 70vh;
                overflow-y: scroll;
            }

            .same-width-list {
                                    float: left;
                                }

            .cp_tabpanel {
                                overflow: hidden;
                                }

            .intLink {
                                cursor: pointer;
                                }

                                img.intLink {
                                border: 0;
                                }

#toolBar1 select {
                                font-size: 10px;
                                }

    #textBox {
        width: calc(100%/2);
        height: 70vh;
        border: 1px #000000 solid;
        padding: 12px;
        overflow-x: scroll ;
        overflow-y: scroll ;
        background: #ffffff;
        position: relative;
    }

#textBox #sourceText {
                            padding: 0;
                margin: 0;
                    min-width: 498px;
                    min-height: 200px;
                    }

#editMode label {
                        cursor: pointer;
                    }
    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #0095d9 !important;
    }
    .modal-content {
        border-radius: 20px;
        -webkit-border-radius: 20px;
        -moz-border-radius: 20px;
    }

    .modal-dialog {
        border: 20px !important;
    }
    .toolBar1{
        height: 20px !important;
    }
    .toolBar2 {
        margin-left: 10px !important;
    }

.sk-chase {
  width: 23px;
  height: 23px;
  position: relative;
  animation: sk-chase 2.5s infinite linear both;
  margin-left:10px;
  margin-top:6px;
}

.sk-chase-dot {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  animation: sk-chase-dot 2.0s infinite ease-in-out both;
}

    .sk-chase-dot:before {
        content: '';
        display: block;
        width: 25%;
        height: 25%;
        background-color: #0000ff;
        border-radius: 100%;
        animation: sk-chase-dot-before 2.0s infinite ease-in-out both;
    }

.sk-chase-dot:nth-child(1) { animation-delay: -1.1s; }
.sk-chase-dot:nth-child(2) { animation-delay: -1.0s; }
.sk-chase-dot:nth-child(3) { animation-delay: -0.9s; }
.sk-chase-dot:nth-child(4) { animation-delay: -0.8s; }
.sk-chase-dot:nth-child(5) { animation-delay: -0.7s; }
.sk-chase-dot:nth-child(6) { animation-delay: -0.6s; }
.sk-chase-dot:nth-child(1):before { animation-delay: -1.1s; }
.sk-chase-dot:nth-child(2):before { animation-delay: -1.0s; }
.sk-chase-dot:nth-child(3):before { animation-delay: -0.9s; }
.sk-chase-dot:nth-child(4):before { animation-delay: -0.8s; }
.sk-chase-dot:nth-child(5):before { animation-delay: -0.7s; }
.sk-chase-dot:nth-child(6):before { animation-delay: -0.6s; }

@@keyframes sk-chase {
  100% { transform: rotate(360deg); }
}

@@keyframes sk-chase-dot {
  80%, 100% { transform: rotate(360deg); }
}

@@keyframes sk-chase-dot-before {
  50% {
    transform: scale(0.4);
  } 100%, 0% {
    transform: scale(1.0);
  }
}
</style>